#if (${profile} == 'core')
    #set ($eeArtifactId = "jakarta.jakartaee-core-api")
    #set ($wildflyConfiguration = "standalone")
#elseif (${profile} == 'web')
    #set ($eeArtifactId = "jakarta.jakartaee-web-api")
    #set ($wildflyConfiguration = "standalone")
    #set ($glassfishArtifact = "web")
#elseif (${profile} == 'full')
    #set ($eeArtifactId = "jakarta.jakartaee-api")
    #set ($wildflyConfiguration = "standalone-full")
    #set ($glassfishArtifact = "glassfish")
#end
#if (${jakartaVersion} == '11')
    #set ($eeApiVersion = "11.0.0")
#elseif (${jakartaVersion} == '10')
    #set ($eeApiVersion = "10.0.0")
    #set ($glassfishVersion = "7.0.23")
    #set ($glassfishContainerId = "glassfish7x")
    #set ($payaraVersion = "6.2025.1")
    #set ($wildflyVersion = "35.0.1.Final")
#elseif (${jakartaVersion} == '9.1')
    #set ($eeApiVersion = "9.1.0")
    #set ($glassfishContainerId = "glassfish6x")
    #if (${javaVersion} == '8')
        #set ($glassfishVersion = "6.0.0")
    #else
        #set ($glassfishVersion = "6.2.5")
    #end
    #set ($tomeeVersion = "9.1.3")
#elseif (${jakartaVersion} == '9')
    #set ($eeApiVersion = "9.0.0")
    #set ($glassfishContainerId = "glassfish6x")
    #if (${javaVersion} == '8')
        #set ($glassfishVersion = "6.0.0")
    #else
        #set ($glassfishVersion = "6.2.5")
    #end
#elseif (${jakartaVersion} == '8')
    #set ($eeApiVersion = "8.0.0")
    #set ($glassfishVersion = "5.1.0")
    #set ($glassfishContainerId = "glassfish5x")
    #set ($payaraVersion = "5.2022.5")
    #set ($tomeeVersion = "8.0.16")
    #set ($wildflyVersion = "26.1.3.Final")
#end
<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" 
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>${groupId}</groupId>
    <artifactId>${artifactId}</artifactId>
    <version>${version}</version>
    <packaging>war</packaging>

    <name>${artifactId}</name>
    <description>
        This is a very simple Jakarta EE application generated by the official Eclipse Starter.
    </description>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.report.sourceEncoding>UTF-8</project.report.sourceEncoding>
#if (${javaVersion} == '8')
        <maven.compiler.target>1.8</maven.compiler.target>
        <maven.compiler.source>1.8</maven.compiler.source>
#else
        <maven.compiler.release>${javaVersion}</maven.compiler.release>
#end
        <jakartaee-api.version>${eeApiVersion}</jakartaee-api.version>
#if (${runtime} == 'payara')
        <payara.version>${payaraVersion}</payara.version>
#end
#if (${runtime} == 'tomee')
        <tomee.version>${tomeeVersion}</tomee.version>
#end
#if (${runtime} == 'wildfly')
        <wildfly.version>${wildflyVersion}</wildfly.version>
#end
        <compiler-plugin.version>3.13.0</compiler-plugin.version>
        <war-plugin.version>3.4.0</war-plugin.version>
#if ((${runtime} == 'glassfish') || ((${runtime} == 'payara') && (${profile} == 'full')))
        <cargo.version>1.10.15</cargo.version>
#end
#if ((${runtime} == 'payara') && (${profile} != 'full'))
    #if (${javaVersion} == '8')
        <payara-micro-plugin.version>2.0</payara-micro-plugin.version>
    #else
        <payara-micro-plugin.version>2.4</payara-micro-plugin.version>
    #end
#end
#if (${runtime} == 'wildfly')
    #if (${javaVersion} == '8')
        <wildfly-plugin.version>3.0.2.Final</wildfly-plugin.version>
    #else
        <wildfly-plugin.version>5.0.1.Final</wildfly-plugin.version>
    #end
#end
#if (${runtime} == 'open-liberty')
        <liberty-plugin.version>3.10.3</liberty-plugin.version>
#end
    </properties>

    <dependencies>
        <dependency>
            <groupId>jakarta.platform</groupId>
            <artifactId>${eeArtifactId}</artifactId>
            <version>${jakartaee-api.version}</version>
            <scope>provided</scope>
        </dependency>
#if ((${runtime} == 'payara') and (${profile} != 'full'))
        <!-- Embedded Jakarta EE runtime -->
        <dependency>
            <groupId>fish.payara.extras</groupId>
            <artifactId>payara-micro</artifactId>
            <version>${payara.version}</version>
            <scope>provided</scope>
        </dependency>
#end
    </dependencies>

    <build>
        <finalName>${artifactId}</finalName>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${compiler-plugin.version}</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>${war-plugin.version}</version>
#if (${profile} == 'core')
                <configuration>
                    <failOnMissingWebXml>false</failOnMissingWebXml>
                </configuration>
#end
            </plugin>

#if (${runtime} == 'glassfish')
            <!-- Execute 'mvn clean package cargo:run' to run the application. -->
            <plugin>
                <groupId>org.codehaus.cargo</groupId>
                <artifactId>cargo-maven3-plugin</artifactId>
                <version>${cargo.version}</version>
                <configuration>
                    <container>
                        <containerId>${glassfishContainerId}</containerId>
                        <artifactInstaller>
                            <groupId>org.glassfish.main.distributions</groupId>
                            <artifactId>${glassfishArtifact}</artifactId>
                            <version>${glassfishVersion}</version>
                            <type>zip</type>
                        </artifactInstaller>
                    </container>
                </configuration>
            </plugin>
#elseif (${runtime} == 'tomee')
            <!-- Execute 'mvn clean package tomee:run' to run the application. -->
            <plugin>
                <groupId>org.apache.tomee.maven</groupId>
                <artifactId>tomee-maven-plugin</artifactId>
                <version>${tomee.version}</version>
                <configuration>
                    <tomeeVersion>${tomee.version}</tomeeVersion>
                    <tomeeClassifier>plume</tomeeClassifier>
                    <removeDefaultWebapps>false</removeDefaultWebapps>
                </configuration>
            </plugin>
#elseif (${runtime} == 'payara')
    #if (${profile} != 'full')
            <!-- Execute 'mvn clean package payara-micro:start' to run the application. -->
            <plugin>
                <groupId>fish.payara.maven.plugins</groupId>
                <artifactId>payara-micro-maven-plugin</artifactId>
                <version>${payara-micro-plugin.version}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>start</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <artifactItem>
                        <groupId>fish.payara.extras</groupId>
                        <artifactId>payara-micro</artifactId>
                        <version>${payara.version}</version>
                    </artifactItem>
                    <deployWar>true</deployWar>
                    <contextRoot>/</contextRoot>
                </configuration>
            </plugin>
    #else
            <!-- Execute 'mvn clean package cargo:run' to run the application. -->
            <plugin>
                <groupId>org.codehaus.cargo</groupId>
                <artifactId>cargo-maven3-plugin</artifactId>
                <version>${cargo.version}</version>
                <configuration>
                    <container>
                        <containerId>payara</containerId>
                            <artifactInstaller>
                                <groupId>fish.payara.distributions</groupId>
                                <artifactId>payara</artifactId>
                                <version>${payara.version}</version>
                            </artifactInstaller>
                    </container>
                </configuration>
            </plugin>
    #end
#elseif (${runtime} == 'wildfly')
            <!-- Execute 'mvn clean package wildfly:dev' to run the application. -->
            <plugin>
                <groupId>org.wildfly.plugins</groupId>
                <artifactId>wildfly-maven-plugin</artifactId>
                <version>${wildfly-plugin.version}</version>
                <configuration>
                    <version>${wildfly.version}</version>
                    <server-config>${wildflyConfiguration}.xml</server-config>
                </configuration>
            </plugin>
#elseif (${runtime} == 'open-liberty')
            <!-- Execute 'mvn clean package liberty:run' to run the application.  -->
            <plugin>
                <groupId>io.openliberty.tools</groupId>
                <artifactId>liberty-maven-plugin</artifactId>
                <version>${liberty-plugin.version}</version>
    ## Once Open Liberty has a proper release for EE 11, this should be removed. 
    #if (${jakartaVersion} == '11')
                <configuration>
                    <runtimeArtifact>
                        <groupId>io.openliberty.beta</groupId>
                        <artifactId>openliberty-runtime</artifactId>
                        <version>LATEST</version>
                        <type>zip</type>
                    </runtimeArtifact>
                </configuration>
    #end
            </plugin>
#end
        </plugins>
    </build>
</project>
