#if (${profile} == 'core')
#set ($eeArtifactId = "jakarta.jakartaee-core-api")
#set ($wildflyConfiguration = "standalone")
#elseif (${profile} == 'web')
#set ($eeArtifactId = "jakarta.jakartaee-web-api")
#set ($wildflyConfiguration = "standalone")
#else
#set ($eeArtifactId = "jakarta.jakartaee-api")
#set ($wildflyConfiguration = "standalone-full")
#end
#if (${jakartaVersion} == '10')
#set ($eeApiVersion = "10.0.0")
#elseif (${jakartaVersion} == '9.1')
#set ($eeApiVersion = "9.1.0")
#elseif (${jakartaVersion} == '9')
#set ($eeApiVersion = "9.0.0")
#else
#set ($eeApiVersion = "8.0.0")
#end
#if (${jakartaVersion} == '8')
#set ($tomeeVersion = "8.0.13")
#set ($payaraVersion = "5.2022.5")
#set ($glassfishContainerId = "glassfish5x")
#if (${profile} == 'web')
#set ($glassfishUrl = "https://repo.maven.apache.org/maven2/org/glassfish/main/distributions/web/5.1.0/web-5.1.0.zip")
#else
#set ($glassfishUrl = "https://repo.maven.apache.org/maven2/org/glassfish/main/distributions/glassfish/5.1.0/glassfish-5.1.0.zip")
#end
#else
#set ($payaraVersion = "6.2022.2")
#set ($tomeeVersion = "9.0.0.RC1")
#set ($glassfishContainerId = "glassfish7x")
#if (${profile} == 'web')
#set ($glassfishUrl = "https://repo.maven.apache.org/maven2/org/glassfish/main/distributions/web/7.0.0/web-7.0.0.zip")
#else
#set ($glassfishUrl = "https://repo.maven.apache.org/maven2/org/glassfish/main/distributions/glassfish/7.0.0/glassfish-7.0.0.zip")
#end
#end
#if (${jakartaVersion} == '10')
#set ($wildflyVersion = "27.0.1.Final")
#else
#set ($wildflyVersion = "26.1.2.Final")
#end
<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" 
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
		xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>${groupId}</groupId>
	<artifactId>${artifactId}</artifactId>
	<version>${version}</version>
	<packaging>war</packaging>

	<name>jakartaee-hello-world</name>
	<description>
  	    This is a very simple Jakarta EE application generated by the official Eclipse Starter.
    </description>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.report.sourceEncoding>UTF-8</project.report.sourceEncoding>
		#if (${javaVersion} == '8')
		<maven.compiler.target>1.8</maven.compiler.target>
		<maven.compiler.source>1.8</maven.compiler.source>
		#else
		<maven.compiler.release>${javaVersion}</maven.compiler.release>
		#end
		<jakartaee-api.version>${eeApiVersion}</jakartaee-api.version>
		#if ((${runtime} == 'payara') && (${profile} != 'full'))
		<payara.version>${payaraVersion}</payara.version>
		#end
		#if (${runtime} == 'tomee')
		<tomee.version>${tomeeVersion}</tomee.version>
		#end
		#if (${runtime} == 'wildfly')
		<wildfly.version>${wildflyVersion}</wildfly.version>
        #end
		#if (${runtime} == 'open-liberty')
		<open-liberty.version>22.0.0.13</open-liberty.version>
        #end		
		<compiler-plugin.version>3.8.0</compiler-plugin.version>
		<war-plugin.version>3.2.2</war-plugin.version>
		#if ((${runtime} == 'glassfish') || ((${runtime} == 'payara') && (${profile} == 'full')))
		<cargo.version>1.10.4</cargo.version>
		#end
		#if (${runtime} == 'tomee')
		<tomee-plugin.version>9.0.0.RC1</tomee-plugin.version>
        #end
		#if ((${runtime} == 'payara') && (${profile} != 'full'))
		<payara-micro-plugin.version>1.4.0</payara-micro-plugin.version>
		#end
		#if (${runtime} == 'wildfly')
		<wildfly-plugin.version>4.0.0.Final</wildfly-plugin.version>
        #end
		#if (${runtime} == 'open-liberty')
		<liberty-plugin.version>3.7.1</liberty-plugin.version>
        #end		
	</properties>

	<dependencies>
		<dependency>
			<groupId>jakarta.platform</groupId>
			<artifactId>${eeArtifactId}</artifactId>
			<version>${jakartaee-api.version}</version>
			<scope>provided</scope>
		</dependency>
		#if ((${runtime} == 'payara') and (${profile} != 'full'))
		<!-- Embedded Jakarta EE runtime -->
		<dependency>
			<groupId>fish.payara.extras</groupId>
			<artifactId>payara-micro</artifactId>
			<version>${payara.version}</version>
			<scope>provided</scope>
		</dependency>		
		#end
	</dependencies>

	<build>
		<finalName>jakartaee-hello-world</finalName>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${compiler-plugin.version}</version>
			</plugin>
			<plugin>
				<artifactId>maven-war-plugin</artifactId>
				<version>${war-plugin.version}</version>
				<configuration>
					<failOnMissingWebXml>false</failOnMissingWebXml>
				</configuration>
			</plugin>

            #if (${runtime} == 'glassfish')
            <!-- Execute 'mvn clean package cargo:run' to run the application. -->
			<plugin>
				<groupId>org.codehaus.cargo</groupId>
				<artifactId>cargo-maven3-plugin</artifactId>
				<version>${cargo.version}</version>
				<configuration>
					<container>
						<containerId>${glassfishContainerId}</containerId>
						<zipUrlInstaller>
							<url>${glassfishUrl}</url>
						</zipUrlInstaller>
					</container>
				</configuration>
			</plugin>
            #elseif (${runtime} == 'tomee')
			<!-- Execute 'mvn clean package tomee:run' to run the application. -->
			<plugin>
				<groupId>org.apache.tomee.maven</groupId>
				<artifactId>tomee-maven-plugin</artifactId>
				<version>${tomee-plugin.version}</version>
				<configuration>
					<tomeeVersion>${tomee.version}</tomeeVersion>
					<tomeeClassifier>plume</tomeeClassifier>
					<removeDefaultWebapps>false</removeDefaultWebapps>
				</configuration>
			</plugin>
			#elseif (${runtime} == 'payara')
			    #if (${profile} != 'full')
			    <!-- Execute 'mvn clean package payara-micro:start' to run the application. -->
			    <plugin>
				    <groupId>fish.payara.maven.plugins</groupId>
				    <artifactId>payara-micro-maven-plugin</artifactId>
				    <version>${payara-micro-plugin.version}</version>
				    <executions>
					    <execution>
						    <goals>
							    <goal>start</goal>
						    </goals>
					    </execution>
				    </executions>
				    <configuration>
					    <artifactItem>
						    <groupId>fish.payara.extras</groupId>
						    <artifactId>payara-micro</artifactId>
						    <version>${payara.version}</version>
					    </artifactItem>
					    <deployWar>true</deployWar>
					    <contextRoot>/</contextRoot>
				    </configuration>
			    </plugin>
				#else
                <!-- Execute 'mvn clean package cargo:run' to run the application. -->
			    <plugin>
		            <groupId>org.codehaus.cargo</groupId>
				    <artifactId>cargo-maven3-plugin</artifactId>
				    <version>${cargo.version}</version>
				    <configuration>
					    <container>
						    <containerId>payara</containerId>
						    <zipUrlInstaller>
							    <url>https://repo1.maven.org/maven2/fish/payara/distributions/payara/5.2022.5/payara-${payaraVersion}.zip</url>
						    </zipUrlInstaller>
					    </container>
				    </configuration>
			    </plugin>				
				#end
			#elseif (${runtime} == 'wildfly')
			<plugin>
				<groupId>org.wildfly.plugins</groupId>
				<artifactId>wildfly-maven-plugin</artifactId>
				<version>${wildfly-plugin.version}</version>
				<configuration>
					<version>${wildfly.version}</version>
					<server-config>${wildflyConfiguration}.xml</server-config>
				</configuration>
			</plugin>
			#elseif (${runtime} == 'open-liberty')
			<plugin>
				<groupId>io.openliberty.tools</groupId>
				<artifactId>liberty-maven-plugin</artifactId>
				<version>${liberty-plugin.version}</version>
				<executions>
					<execution>
						<id>package-server</id>
						<phase>package</phase>
						<goals>
							<goal>create</goal>
							<goal>install-feature</goal>
							<goal>deploy</goal>
						</goals>
						<configuration>
							<libertyRuntimeVersion>${open-liberty.version}</libertyRuntimeVersion>
						</configuration>
					</execution>
				</executions>
			</plugin>			
			#end			
		</plugins>
	</build>
</project>